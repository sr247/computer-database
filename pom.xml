<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.excilys.formation.java</groupId>
	<artifactId>computer-database</artifactId>
	<version>4.3.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>computer-database</name>
	<url>https://github.com/sr247/computer-database</url>

	<repositories>
		<repository>
			<id>openqa.org</id>
			<name>Openqa Release Repository</name>
			<url>http://archiva.openqa.org/repository/releases</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<properties>
		<!-- sets the projects encoding to UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- compile -->
		<java.version>1.8</java.version>
		<javax.version>4.0.0</javax.version>
		<mojo.version>1.2.1</mojo.version>
		<jstl.version>1.2</jstl.version>

		<!-- checkstyle -->
		<checkstyle.version>3.0.0</checkstyle.version>

		<!-- test -->
		<junit.version>5.0.1</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<sunfire.version>2.19.1</sunfire.version>

		<!-- logs -->
		<log4j.version>1.2.17</log4j.version>
		<slf4j.version>1.7.25</slf4j.version>
		<logback.version>1.2.3</logback.version>

		<!-- runtime -->
		<mysql.version>5.1.38</mysql.version>
		<myqsl-jdbc.version>8.0.8-dmr</myqsl-jdbc.version>
		<tomcat-plugin.version>2.2</tomcat-plugin.version>

		<!-- Connection pool -->
		<hikariCP.version>3.0.0</hikariCP.version>

		<!-- Spring version -->
		<springframework.version>4.3.14.RELEASE</springframework.version>

	</properties>

	<dependencies>
		<!-- tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- tomcat <dependency> <groupId>org.apache.tomcat.maven</groupId> <artifactId>tomcat7-maven-plugin</artifactId> 
			<version>${tomcat-plugin.version}</version> </dependency> -->

		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<!-- database -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${myqsl-jdbc.version}</version>
		</dependency>

		<!-- httpServlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- jstl -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<!-- connection pool -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${hikariCP.version}</version>
		</dependency>

		<!-- Spring -->
		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- Plugin maven for compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- Plugin Tomcat7 -->
			<!-- <plugin> <groupId>org.apache.tomcat.maven</groupId> <artifactId>tomcat7-maven-plugin</artifactId> 
				<version>${tomcat-plugin.version}</version> <configuration> <url>http://localhost:8080/manager/text</url> 
				<server>TomcatServer</server> <path>/computer-database</path> </configuration> 
				</plugin> -->

			<!-- Plugin Selenium test -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
						<configuration>
							<background>true</background>
							<!-- To capture the logs from Selenium to a file, enable logOutput. 
								This will create a server.log that captures all of the output. <logOutput>false</logOutput> -->
						</configuration>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop-server</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- plugin maven for sunfire test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${sunfire.version}</version>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.0.1</version>
					</dependency>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${junit.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Enables launching the CLI via command line using Maven -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${mojo.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>com.excilys.formation.java.ui.CliUI</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.version}</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<suppressionsLocation>suppressions.xml</suppressionsLocation>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
